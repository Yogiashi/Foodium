<div class="container">
  <div class="row">
    <div class="col-6 mx-auto mt-5">
      <h1 class="text-center">新規投稿</h1>
      <%= form_with model: @post do |f| %>
      <%= render 'layouts/errors', obj: @post %>
        <div class="row mt-5">
          <%= f.label :画像, class: "col-form-label col-3"%>
          <!--画像プレビュー機能-->
          <%= image_tag @post.get_post_image, onClick: "$('.img_field').click()", class: "img_prev col-6", size: "150x250" %>
          <%= f.file_field :post_image, class: "img_field mx-auto mt-5",style: 'display:none;', accept: 'image/*' %>
        </div>
        <div class="row mt-5">
          <%= f.label :ショップ名, class: "col-form-label col-3", placeholder: "お店の名前を入力..."%>
          <%= f.text_field :shop_name, class: "col-9 form-control"%>
        </div>
         <div class="row mt-5">
          <%= f.label :料理名, class: "col-form-label col-3", placeholder: "料理の名前を入力..."%>
          <%= f.text_field :dish_name, class: "col-9 form-control"%>
        </div>
        <div class="row mt-5">
          <%= f.label :キャプション, class: "col-form-label col-3"%>
          <%= f.text_area :caption, class: "col-9 form-control",placeholder: "キャプションを入力...", size: "30x5"%>
        </div>
        <!--価格選択-->
        <div class="row mt-5">
          <%= f.label :価格, class: "col-form-label col-3"%>
          <%= f.number_field :price, class: "col-9"%>
        </div>
        <!--タグ機能追加-->
        <!--表示非表示機能追加-->
        <!--地図情報を追加-->
        <div class="row mt-5">
          <%= f.label :address, '場所', class: "col-form-label col-3" %>
          <%= f.text_field :address, class: 'col-9' %>
        </div>
        <div class='row'>
           <!-- 地名入力用のinputを追加 -->
           <div class="col-12 mt-5">
             <input id="address" type="textbox" value="Sydney, NSW">
    
          <!-- buttonをクリックしたらcodeAddressを実行　-->
          <input type="button" value="Encode" onclick="codeAddress()">
          <div id='map'>
          </div>
          
          <style>
          #map{
            height: 400px;
          }
          </style>
          
          <script>
          /*
          mapを関数の外で定義(codeAddressでも使うため)
          geocoderを用意
          */
          
          let map
          let geocoder
          
          function initMap(){
            // geocoderを初期化
            geocoder = new google.maps.Geocoder()
          
            map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: -34.397, lng: 150.644},
            zoom: 8
            });
          }
          
          function codeAddress(){
            // 入力を取得
            let inputAddress = document.getElementById('address').value;
          
            // geocodingしたあとmapを移動
            geocoder.geocode( { 'address': inputAddress}, function(results, status) {
              if (status == 'OK') {
          　　　　　　　　　　　　// map.setCenterで地図が移動
                map.setCenter(results[0].geometry.location);
          
          　　　　　　　　　　　　// google.maps.MarkerでGoogleMap上の指定位置にマーカが立つ
                var marker = new google.maps.Marker({
                    map: map,
                    position: results[0].geometry.location
                });
              } else {
                alert('Geocode was not successful for the following reason: ' + status);
              }
            });
          }
          </script>
          <script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_API_KEY'] %>&callback=initMap" async defer></script>
          </div>
       </div>

        <div class="row mt-5 d-flex justify-content-center">
          <%= f.submit "投稿する", class: "btn btn-primary mr-5"%>
        </div>
      <% end %>
    </div>
  </div>
</div>